G.Graphic.AnimQueue={queue:[],playing:!1,itemPlay:function(i){var t=G.Graphic.AnimQueue;t.queue.push(i);!t.playing&&i.playing&&(t.playing=!0,G.Graphic.AnimQueue.animate())},itemStop:function(i){var t=G.Graphic.AnimQueue,n=t.queue[i];n&&(n.playing=!1)},animate:function(){for(var i=G.Graphic.AnimQueue,t=i.queue.length,n=!1,r=0;r<t;r++){var e=i.queue[r];e.playing&&(n=!0,e.onStep())}n&&requestAnimationFrame(i.animate)}},G.Graphic.Anim={options:{duration:2,repeatCount:-1},play:function(){var i=this,t=i._layer;if(!t)return i;if(i._playing)return i;i._playing=!0;var n=1e3*i.options.duration,r=i.options.repeatCount;return i._startAt=+new Date,i._endAt=r>0?i._startAt+n*r:null,i._queueId=G.Graphic.AnimQueue.itemPlay({playing:!0,onStep:G.Util.bind(i._onStep,i)}),i},stop:function(){var i=this;return G.Graphic.AnimQueue.itemStop(i._queueId),i._playing=!1,i},_onStep:function(){var i,t,n=this,r=(n._layer,+new Date);n._playing&&(n._endAt&&r>n._endAt?n._final():(i=1e3*n.options.duration,t=(r-n._startAt)%i/i,n._interpolate(t)))},_final:function(){var i=this,t=i._toGraphic;i.updateGeom(t.geom),i.updateOptions(t.options),G.Graphic.AnimQueue.itemStop(i._queueId),i._playing=!1},_interNum:function(i,t,n){return i+(t-i)*n},_interArr:function(i,t,n){if(i&&t){var r,e,o,a=[],p=Math.min(i.length,t.length);for(r=0;r<p;r++)e=i[r],o=t[r],a[r]=this._interNum(e,o,n);return a}},_interColor:function(i,t,n){var r=G.Util.colorRgb,e=r(i),o=r(t),a=this._interArr(e,o,n);return G.Util.colorHex(a[0],a[1],a[2])},_interpolate:function(i){},_onStartEdit:function(){},_onEndEdit:function(){}},G.Graphic.AnimCircle=G.Graphic.Circle.extend({mixins:[G.Graphic.Anim],init:function(i,t,n){var r=this,e=G.Graphic.Circle;if(!(i instanceof e&&t instanceof e))throw new Error("Type error");r.options=G.Util.merge({},r.options,i.options,n),r._fromGraphic=i,r._toGraphic=t},_interpolate:function(i){var t,n,r=this,e=r._fromGraphic,o=r._toGraphic,a=r._interArr(e.geom,o.geom,i),p=e.options,l=o.options,h=G.Util.merge({},p),u=["outlineDashArray","fillImageSize"],c=["outlineWidth","outlineOpacity","fillOpacity"],m=["outlineColor","fillColor"];for(t=u.length-1;t>=0;t--)n=u[t],n&&(h[n]=r._interArr(p[n],l[n],i));for(t=c.length-1;t>=0;t--)n=c[t],n&&(h[n]=r._interNum(p[n],l[n],i));for(t=m.length-1;t>=0;t--)n=m[t],n&&(h[n]=r._interColor(p[n],l[n],i));r.updateGeom(a),r.updateOptions(h)}}),G.Graphic.AnimOD=G.Graphic.OD.extend({mixins:[G.Graphic.Anim],init:function(i,t,n){var r=this;if(0==G.MathUtil.calcDistance(i[0],i[1]))throw new Error("destination error");var e=new G.Graphic.OD([i[0],i[0]],t,n),o=new G.Graphic.OD(i,t,n),a={animating:!0,endGeom:o.geom[1]};r.options=G.Util.merge({},r.options,n,a),r._calcODPoint(i),r._fromGraphic=e,r._toGraphic=o},_interpolate:function(i){var t,n,r,e=this,o=e._fromGraphic,a=e._toGraphic,p=o.geom,l=a.geom,h=[],u=Math.min(p.length,l.length);for(r=0;r<u;r++)t=p[r],n=l[r],h[r]=e._interArr(t,n,i);e.updateGeom(h)},_onStartEdit:function(){return this._editing=!1,!1},onEndEdit:function(){return this._editing=!1,!1}}),G.Graphic.AnimPoint=G.Graphic.Point.extend({mixins:[G.Graphic.Anim],init:function(i,t,n){var r=this,e=G.Graphic.Point;if(!(i instanceof e&&t instanceof e))throw new Error("Type error");r.options=G.Util.merge({},r.options,i.options,n),r._fromGraphic=i,r._toGraphic=t},_interpolate:function(i){var t,n,r=this,e=r._fromGraphic,o=r._toGraphic,a=r._interArr(e.geom,o.geom,i),p=e.options,l=o.options,h=G.Util.merge({},p),u=["size","offset","fillImageSize"],c=["imageRotate","outlineWidth","outlineOpacity","fillOpacity"],m=["outlineColor","fillColor"];for(t=u.length-1;t>=0;t--)n=u[t],n&&(h[n]=r._interArr(p[n],l[n],i));for(t=c.length-1;t>=0;t--)n=c[t],n&&(h[n]=r._interNum(p[n],l[n],i));for(t=m.length-1;t>=0;t--)n=m[t],n&&(h[n]=r._interColor(p[n],l[n],i));r.updateGeom(a),r.updateOptions(h)}}),G.Graphic.AnimPolygon=G.Graphic.Polygon.extend({mixins:[G.Graphic.Anim],init:function(i,t,n){var r=this,e=G.Graphic.Polygon;if(!(i instanceof e&&t instanceof e))throw new Error("Type error");r.options=G.Util.merge({},r.options,i.options,n),r._fromGraphic=i,r._toGraphic=t},_interpolate:function(i){var t,n,r,e,o,a,p,l,h=this,u=h._fromGraphic,c=h._toGraphic,m=u.geom,f=c.geom,s=[],_=Math.min(m.length,f.length);for(a=0;a<_;a++){for(t=m[a],n=f[a],r=[],l=Math.min(t.length,n.length),p=0;p<l;p++)e=t[p],o=n[p],r[p]=h._interArr(e,o,i);s[a]=r}var a,g,d=u.options,A=c.options,y=G.Util.merge({},d),v=["outlineDashArray","fillImageSize"],C=["outlineWidth","outlineOpacity","fillOpacity"],O=["outlineColor","fillColor"];for(a=v.length-1;a>=0;a--)g=v[a],g&&(y[g]=h._interArr(d[g],A[g],i));for(a=C.length-1;a>=0;a--)g=C[a],g&&(y[g]=h._interNum(d[g],A[g],i));for(a=O.length-1;a>=0;a--)g=O[a],g&&(y[g]=h._interColor(d[g],A[g],i));h.updateGeom(s),h.updateOptions(y)}}),G.Graphic.AnimPolyline=G.Graphic.Polyline.extend({mixins:[G.Graphic.Anim],init:function(i,t,n){var r=this,e=G.Graphic.Polyline;if(!(i instanceof e&&t instanceof e))throw new Error("Type error");r.options=G.Util.merge({},r.options,i.options,n),r._fromGraphic=i,r._toGraphic=t},_interpolate:function(i){var t,n,r,e=this,o=e._fromGraphic,a=e._toGraphic,p=o.geom,l=a.geom,h=[],u=Math.min(p.length,l.length);for(r=0;r<u;r++)t=p[r],n=l[r],h[r]=e._interArr(t,n,i);var r,c,m=o.options,f=a.options,s=G.Util.merge({},m),_=["lineDashArray"],g=["lineWidth","lineOpacity"],d=["lineColor"];for(r=_.length-1;r>=0;r--)c=_[r],c&&(s[c]=e._interArr(m[c],f[c],i));for(r=g.length-1;r>=0;r--)c=g[r],c&&(s[c]=e._interNum(m[c],f[c],i));for(r=d.length-1;r>=0;r--)c=d[r],c&&(s[c]=e._interColor(m[c],f[c],i));e.updateGeom(h),e.updateOptions(s)}});